# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /account                                      controllers.Application.index()

GET         /cookies                                      controllers.Application.setCookies(aToken: java.lang.String, expires: java.lang.String)

GET         /login                                        controllers.Application.firstLogIn(aToken: java.lang.String, expires: java.lang.String)

GET         /                                             controllers.Application.start(code: String ?= "", error_reason: String ?= "")

POST        /                                             controllers.Application.start(code: String ?= "", error_reason: String ?= "")

GET         /privacy                                      controllers.Application.showPrivacy()

GET         /browse/:phrase                               controllers.Application.showBrowseChallengesWithData(phrase: java.lang.String)

GET         /browse                                       controllers.Application.showBrowseChallenges()

GET         /rankings                                     controllers.Application.showRankings()

GET         /challenge/shownew                            controllers.Application.showCreateChallenge()

POST        /challenge/create                             controllers.Application.ajaxCreateChallenge()

GET         /challenge/ajax/search                        controllers.Application.ajaxGetChallengesForCriteria(phrase: String, category: String, page: Integer, scope: Integer)

GET         /challenge/ajax/more                          controllers.Application.ajaxShowMoreChallenges(offset: Integer)

POST        /challenge/ajax/join                          controllers.Application.ajaxJoinChallenge(challengeId: Long)

GET         /challenge/ajax/searchbycategory              controllers.Application.ajaxGetChallengesForCategory(category: String)

GET         /challenge/ajax/latest                        controllers.Application.ajaxGetLatestChallenges()

POST        /challenge/ajax/fbusers                       controllers.Application.ajaxGetFacebookUsers(ids: String)

POST        /challenge/ajax/close                         controllers.Application.ajaxCloseChallenge(id: Long)

GET         /challenge/ajax/responses                     controllers.Application.ajaxGetResponsesForChallenge(challengeId: Long)

GET         /challenge/ajax/participations                controllers.Application.ajaxGetUserParticipations()

GET         /challenge/ajax/completed                     controllers.Application.ajaxGetCompletedChallenges()

GET         /challenge/details                            controllers.Application.showChallenge(id: Long)

GET         /challenge/responses                          controllers.Application.showChallengeResponses(id: Long, responseId: Long ?= -1)

POST        /challenge/ajax/leave                         controllers.Application.ajaxLeaveChallenge(challengeId: Long)

POST        /challenge/ajax/participants/remove           controllers.Application.ajaxRemoveParticipantFromChallenge(challengeId: String, participantUsername: String, name: String)

GET         /challenge/ajax/participants/more             controllers.Application.ajaxShowMoreParticipants(id: Long, offset: Integer)

GET         /challenge/participators                      controllers.Application.showParticipators(challengeId: Long)

POST        /challenge/ajax/rate                          controllers.Application.ajaxRateChallenge(challengeId: Long, rating: Integer)

POST        /response/ajax/decline                        controllers.Application.ajaxDeclineResponse(id: Long)

POST        /response/ajax/accept                         controllers.Application.ajaxAcceptResponse(id: Long)

POST        /response/ajax/submit                         controllers.Application.ajaxSubmitChallengeResponse()

GET         /response/ajax/response                       controllers.Application.ajaxGetResponse(responseId: Long)

GET         /javascriptRoutes                             controllers.Application.javascriptRoutes()

GET         /currentprofile                               controllers.Application.showCurrentProfile()

GET         /profile                                      controllers.Application.showProfile(username: String)

GET         /profile/content                              controllers.Application.ajaxGetCurrentProfileContent()

GET         /challenges                                   controllers.Application.showMyChallenges()

GET         /challenges/content                           controllers.Application.ajaxGetChallengesContent()

GET         /notifications                                controllers.Application.showMyNotifications()

GET         /notifications/follow                         controllers.Application.followNotification(notificationId: Long)

GET         /notifications/ajax/more                      controllers.Application.ajaxShowMoreNotifications(offset: Integer)

GET         /notifications/follow/challengedetails        controllers.Application.followNotificationToChallengeDetails(notificationId: Long, challengeId: Long)

GET         /notifications/follow/responses               controllers.Application.followNotificationToChallengeResponses(notificationId: Long, challengeId: Long)

GET         /notifications/follow/userprofile             controllers.Application.followNotificationToUserProfile(notificationId: Long, username: java.lang.String)

GET         /participations                               controllers.Application.showMyParticipations()

GET         /participations/ajax/more                     controllers.Application.ajaxShowMoreParticipations(offset: Integer)

GET         /participations/content                       controllers.Application.ajaxGetParticipationsContent()

POST        /comment/ajax/submit                          controllers.Application.ajaxSubmitComment()

GET         /comment/ajax/more                            controllers.Application.ajaxShowMoreComments(challengeId: Long, offset: Integer)

GET         /vchallenger/switchtoadmin                    controllers.Application.switchToAdmin(passwordPhrase: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                 controllers.Assets.at(path="/public", file)
